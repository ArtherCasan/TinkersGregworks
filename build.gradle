buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.7.10-0.0.1"
group= "vexatos.tgregworks" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Tinkers' Gregworks"

repositories {
    /*maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name "DVS1 Maven FS'"
        url 'http://dvs1.progwml6.com/files/maven'
    }*/
}

configurations {
    provided
    embedded
    compile.extendsFrom provided, embedded
    all*.exclude group: "codechicken"
}

dependencies {
    //compile "mantle:Mantle:1.7.10-0.3.1.jenkins176:deobf"
    //compile "codechicken:CodeChickenCore:1.7.10-1.0.2.9:dev"
    //compile "codechicken:NotEnoughItems:1.7.10-1.0.2.15:dev"
    //compile "tconstruct:TConstruct:1.7.10-1.6.0.build638:deobf"
    provided "com.gregoriust.gregtech:gregtech_1.7.10:5.07.07:dev"
}

minecraft {
    version = "1.7.10-10.13.3.1384-1.7.10"
    runDir = "eclipse"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

apply plugin: 'idea'
idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
        outputDir = file('build/classes/main')
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}
